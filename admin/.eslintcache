[{"/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/index.js":"1","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/App.jsx":"2","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/router.js":"3","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/Login/Login.jsx":"4","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/ResultPage/ResultPage.jsx":"5","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/AddArticle/AddArticle.jsx":"6","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/NotFound/NotFound.jsx":"7","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/Data/Data.jsx":"8","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/ArticlesList/ArticlesList.jsx":"9","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/Chat/Chat.jsx":"10","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/api/api.js":"11","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/utils/request.js":"12"},{"size":519,"mtime":1620106693925,"results":"13","hashOfConfig":"14"},{"size":9401,"mtime":1620106693924,"results":"15","hashOfConfig":"14"},{"size":948,"mtime":1620106693925,"results":"16","hashOfConfig":"14"},{"size":2396,"mtime":1620106693926,"results":"17","hashOfConfig":"14"},{"size":507,"mtime":1620106693926,"results":"18","hashOfConfig":"14"},{"size":13266,"mtime":1620549294856,"results":"19","hashOfConfig":"14"},{"size":601,"mtime":1620106693926,"results":"20","hashOfConfig":"14"},{"size":10415,"mtime":1620106693925,"results":"21","hashOfConfig":"14"},{"size":2601,"mtime":1620106693925,"results":"22","hashOfConfig":"14"},{"size":115,"mtime":1620106693925,"results":"23","hashOfConfig":"14"},{"size":1114,"mtime":1620106693924,"results":"24","hashOfConfig":"14"},{"size":3221,"mtime":1620106693925,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"17snmte",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/index.js",[],["53","54"],"/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/App.jsx",["55"],"/*\n * @Author: jk\n * @Date: 2020-12-14 10:57:56\n * @Last Modified by: jk\n * @Last Modified time: 2021-03-01 17:06:47\n */\n\nimport { useState, useEffect } from \"react\";\nimport {\n  Route,\n  Switch as RouterSwitch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport QueueAnim from \"rc-queue-anim\";\nimport { Layout, Menu, Breadcrumb, Avatar, Space, Badge, Switch } from \"antd\";\nimport {\n  BellOutlined,\n  MailOutlined,\n  SettingOutlined,\n  ExpandOutlined,\n  CheckOutlined,\n  CloseOutlined \n} from \"@ant-design/icons\";\nimport {\n  EditOutlined,\n  AudioOutlined,\n  UserOutlined,\n  OrderedListOutlined,\n  HomeOutlined,\n  RadarChartOutlined,\n} from \"@ant-design/icons\";\n\nimport styles from \"./App.module.scss\";\nimport screenfull from \"screenfull\"; // 导入全屏插件\nimport Routes from \"./router\";\n// 登录页面\nimport Login from \"./views/Login/Login\";\nimport AddArticle from \"./views/AddArticle/AddArticle\"; // 添加文章页面\nimport NotFound from \"./views/NotFound/NotFound\"; //404\nimport ResultPage from \"./views/ResultPage/ResultPage\"; // 结果页面\n\n// import Data from \"./views/Data/Data\";\n// import AddArticle from \"./views/AddArticle/AddArticle\";\n\nfunction App(props) {\n  const { Content, Footer, Sider } = Layout;\n  const [collapsed, setCollapsed] = useState(true);\n  const [activeItem, setActiveItem] = useState([props.location.pathname]); // 路由\n  const [breadcrumbItem, setBreadcrumbItem] = useState(\"可视化数据\"); // 面包屑导航\n  // console.log(props.history.listen(route => {\n  //   console.log(route)\n  // }),'props')\n  // const menuList = [\n  //   {\n  //     path: \"data\",\n  //     title: \"数据台\",\n  //     icon: <PieChartOutlined />,\n  //     children: [\n  //       {\n  //         path: \"data\",\n  //         title: \"实时数据\",\n  //         icon: <RadarChartOutlined />,\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     path: \"\",\n  //     title: \"文章管理\",\n  //     icon: <SettingOutlined />,\n  //     children: [\n  //       {\n  //         path: \"/admin/addArticle\",\n  //         title: \"添加文章\",\n  //         icon: <EditOutlined />,\n  //       },\n  //       {\n  //         path: \"articlesList\",\n  //         title: \"文章列表\",\n  //         icon: <OrderedListOutlined />,\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     path: \"chat\",\n  //     title: \"留言管理\",\n  //     icon: <AudioOutlined />,\n  //     children: [\n  //       {\n  //         path: \"/admin/chat\",\n  //         title: \"留言管理\",\n  //         icon: <AudioOutlined />,\n  //       },\n  //     ],\n  //   },\n  // ];\n\n  const menuList = [\n    {\n      path: \"/admin/data\",\n      title: \"可视化数据\",\n      icon: <RadarChartOutlined />,\n    },\n    {\n      path: \"/admin/addArticle\",\n      title: \"添加文章\",\n      icon: <EditOutlined />,\n    },\n    {\n      path: \"/admin/articlesList\",\n      title: \"文章列表\",\n      icon: <OrderedListOutlined />,\n    },\n    {\n      path: \"/admin/chat\",\n      title: \"留言管理\",\n      icon: <AudioOutlined />,\n    },\n  ];\n\n  useEffect(() => {\n    const titleList = {\n      \"/admin/data\": \"数据台\",\n      \"/admin/articlesList\": \"文章列表\",\n      \"/admin/chat\": \"留言管理\",\n    };\n    // setActiveItem(['1']);\n    setBreadcrumbItem(titleList[props.location.pathname]);\n  }, [props.location.pathname]);\n\n  // 跳转页面\n  const setPage = (key) => {\n    console.log(key);\n    setActiveItem([menuList[key].path]);\n    props.history.push(menuList[key].path);\n    setBreadcrumbItem(menuList[key].title);\n  };\n\n  /**\n   * TODO 实现页面全屏化功能\n   */\n  const fullScreen = () => {\n    screenfull.toggle();\n  };\n\n  /**\n   * TODO 切换菜单栏\n   * \n   */\n\n  return (\n    <div className={styles.App}>\n      <RouterSwitch>\n        <Redirect to=\"/user/login\" from=\"/\" exact></Redirect>\n        <Route path=\"/user/login\" exact component={Login}></Route>\n        <Route path=\"/admin/addArticle/:id?\" component={AddArticle}></Route>\n        <Route exact path=\"/admin/result\" component={ResultPage}></Route>\n        <Redirect to=\"/admin/data\" from=\"/admin\" exact></Redirect>\n        <Route path=\"/admin\">\n          <Layout className={styles.layoutWrap}>\n            <Sider\n              theme=\"dark\"\n              trigger={null}\n              collapsible\n              collapsed={collapsed}\n              onCollapse={(collapsed) => setCollapsed(collapsed)}\n              className={styles.siderWrap}\n            >\n              <QueueAnim delay={550} type=\"left\" leaveReverse>\n                <div className={styles.avatarWrap} key=\"0\">\n                  <Avatar size={50} src='/avatar.jpg' />\n                  <p className={styles.name}>小菜鸡</p>\n                  <p className={styles.date}>\n                    {new Date().toLocaleDateString()}\n                  </p>\n                </div>\n                <div className={styles.switch} key='1'>\n                  <Switch checkedChildren={<CheckOutlined />}\n      unCheckedChildren={<CloseOutlined />} defaultChecked onChange={(checked) => setCollapsed(checked)} />\n                </div>\n                <Menu\n                  className={styles.menuWrap}\n                  defaultSelectedKeys={activeItem}\n                  mode=\"inline\"\n                  onClick={({ key }) => setPage(key)}\n                  key=\"2\"\n                >\n                  {/* {menuList.map((item, index) => (\n\n                    <SubMenu\n                      key={index}\n                      title={\n                        <span>\n                          {item.icon}\n                          <span>{item.title}</span>\n                        </span>\n                      }\n                      onTitleClick={changeBreadcrumbItem}\n                    >\n                      {item.children.map((items) => (\n                        <Menu.Item key={items.path}>\n                          {items.icon}\n                          {items.title}\n                        </Menu.Item>\n                      ))}\n                    </SubMenu>\n                  ))} */}\n                  {menuList.map((item, index) => (\n                    <Menu.Item key={index} icon={item.icon}>\n                      {item.title}\n                    </Menu.Item>\n                  ))}\n\n                  {/* <Menu.Item key=\"data\">\n                    <PieChartOutlined />\n                    <span>实时数据</span>\n                  </Menu.Item>\n\n                  <SubMenu\n                    key=\"3\"\n                    title={\n                      <span>\n                        <SettingOutlined />\n                        <span>文章管理</span>\n                      </span>\n                    }\n                  >\n                    <Menu.Item key=\"addArticle\">\n                      <EditOutlined />\n                      添加文章\n                    </Menu.Item>\n\n                    <Menu.Item key=\"articlesList\">\n                      <OrderedListOutlined />\n                      文章列表\n                    </Menu.Item>\n                  </SubMenu>\n\n                  <Menu.Item key=\"chat\">\n                    <AudioOutlined />\n                    <span>留言管理</span>\n                  </Menu.Item> */}\n                </Menu>\n\n                \n              </QueueAnim>\n            </Sider>\n            <Layout>\n              {/* <Header style={{ background: '#fff', padding: 0 }} /> */}\n              <Content className={styles.contentWrap}>\n                <div className={styles.headerWrap}>\n                  <Breadcrumb>\n                    <Breadcrumb.Item>\n                      <a href=\"/admin/data\">\n                        <HomeOutlined />\n                      </a>\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item>工作台</Breadcrumb.Item>\n                    <Breadcrumb.Item>{breadcrumbItem}</Breadcrumb.Item>\n                  </Breadcrumb>\n                  <Space size=\"large\" className={styles.infoWrap}>\n                    <ExpandOutlined\n                      className={styles.screen}\n                      onClick={fullScreen}\n                    />\n\n                    <Badge\n                      size=\"small\"\n                      className={styles.infoItem}\n                      count={5}\n                      title=\"您有三条通知!\"\n                    >\n                      <BellOutlined />\n                    </Badge>\n\n                    <Badge\n                      color=\"#f39c12\"\n                      className={styles.infoItem}\n                      count={2}\n                    >\n                      <MailOutlined />\n                    </Badge>\n                    <Badge title=\"设置\" className={styles.settingItem}>\n                      <SettingOutlined />\n                    </Badge>\n                    <Badge dot color=\"#1abc9c\" title=\"个人信息\">\n                      <Avatar src='/avatar.jpg' />\n                    </Badge>\n                  </Space>\n                </div>\n                <div className={styles.content}>\n                  <Routes></Routes>\n                </div>\n              </Content>\n              <Footer className={styles.footer}>BLOG 后台管理 By 2021</Footer>\n            </Layout>\n          </Layout>\n        </Route>\n\n        {/* 暂时注释 */}\n        <Route path=\"/404\" component={NotFound} />\n        <Redirect from=\"*\" to=\"/404\" />\n      </RouterSwitch>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/router.js",["56"],"/*\n * @Author: jk\n * @Date: 2020-12-14 11:15:30\n * @Last Modified by: jk\n * @Last Modified time: 2021-01-04 16:37:25\n */\nimport {lazy} from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Data from \"./views/Data/Data\"; // 数据添加页面\n// const Data = lazy(()=> import(\"./views/Data/Data\"));\nimport ArticlesList from \"./views/ArticlesList/ArticlesList\"; // 文章列表页面\nimport Chat from \"./views/Chat/Chat\"; // 理由列表页面\n// import ResultPage from \"./views/ResultPage/ResultPage\";\nconst Routes = (props) => {\n  return (\n    <Switch>\n      {/* <Route exact path=\"/admin/addArticle\" component={AddArticle}></Route> */}\n\n      <Route exact path=\"/admin/data\" component={Data}></Route>\n      <Route exact path=\"/admin/chat\" component={Chat} />\n      <Route exact path=\"/admin/articlesList\" component={ArticlesList} />\n      <Redirect from=\"*\" to=\"/404\" />\n    </Switch>\n  );\n};\n\n\n\nexport default Routes;\n","/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/Login/Login.jsx",[],"/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/ResultPage/ResultPage.jsx",[],"/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/AddArticle/AddArticle.jsx",[],"/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/NotFound/NotFound.jsx",[],"/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/Data/Data.jsx",[],"/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/ArticlesList/ArticlesList.jsx",[],"/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/views/Chat/Chat.jsx",[],"/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/api/api.js",[],"/Users/zhihenongyaobutupaopao/Desktop/personal-blog/admin/src/utils/request.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":28,"column":3,"nodeType":"63","messageId":"64","endLine":28,"endColumn":15},{"ruleId":"61","severity":1,"message":"65","line":7,"column":9,"nodeType":"63","messageId":"64","endLine":7,"endColumn":13},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'UserOutlined' is defined but never used.","Identifier","unusedVar","'lazy' is defined but never used.","no-global-assign","no-unsafe-negation"]