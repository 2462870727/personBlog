[{"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\router.js":"2","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Login\\login.jsx":"3","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Login\\Login.jsx":"4","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\AddArticle\\AddArticle.jsx":"5","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Data\\Data.jsx":"6","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Chat\\Chat.jsx":"7","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\ArticlesList\\ArticlesList.jsx":"8","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\App.jsx":"9","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\utils\\request.js":"10","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\api\\api.js":"11","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\NotFound\\NotFound.jsx":"12","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\ResultPage\\ResultPage.jsx":"13"},{"size":541,"mtime":1612504247891,"results":"14","hashOfConfig":"15"},{"size":978,"mtime":1609749463764,"results":"16","hashOfConfig":"15"},{"size":1678,"mtime":1606724708599,"results":"17","hashOfConfig":"18"},{"size":2477,"mtime":1611747666611,"results":"19","hashOfConfig":"15"},{"size":13738,"mtime":1611751433911,"results":"20","hashOfConfig":"15"},{"size":10917,"mtime":1612165560508,"results":"21","hashOfConfig":"15"},{"size":123,"mtime":1611106729293,"results":"22","hashOfConfig":"15"},{"size":2717,"mtime":1612512428874,"results":"23","hashOfConfig":"15"},{"size":9704,"mtime":1612508813073,"results":"24","hashOfConfig":"15"},{"size":3361,"mtime":1612501565818,"results":"25","hashOfConfig":"15"},{"size":1172,"mtime":1610357450265,"results":"26","hashOfConfig":"15"},{"size":629,"mtime":1609141780335,"results":"27","hashOfConfig":"15"},{"size":524,"mtime":1608868239295,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1594o61",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"s5x0hj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\index.js",[],["58","59"],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\router.js",["60"],"/*\r\n * @Author: jk\r\n * @Date: 2020-12-14 11:15:30\r\n * @Last Modified by: jk\r\n * @Last Modified time: 2021-01-04 16:37:25\r\n */\r\nimport {lazy} from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Data from \"./views/Data/Data\"; // 数据添加页面\r\n// const Data = lazy(()=> import(\"./views/Data/Data\"));\r\nimport ArticlesList from \"./views/ArticlesList/ArticlesList\"; // 文章列表页面\r\nimport Chat from \"./views/Chat/Chat\"; // 理由列表页面\r\n// import ResultPage from \"./views/ResultPage/ResultPage\";\r\nconst Routes = (props) => {\r\n  return (\r\n    <Switch>\r\n      {/* <Route exact path=\"/admin/addArticle\" component={AddArticle}></Route> */}\r\n\r\n      <Route exact path=\"/admin/data\" component={Data}></Route>\r\n      <Route exact path=\"/admin/chat\" component={Chat} />\r\n      <Route exact path=\"/admin/articlesList\" component={ArticlesList} />\r\n      <Redirect from=\"*\" to=\"/404\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Routes;\r\n","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Login\\login.jsx",["61","62","63"],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Login\\Login.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\AddArticle\\AddArticle.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Data\\Data.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Chat\\Chat.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\ArticlesList\\ArticlesList.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\App.jsx",["64"],"/*\r\n * @Author: jk\r\n * @Date: 2020-12-14 10:57:56\r\n * @Last Modified by: jk\r\n * @Last Modified time: 2021-02-05 15:06:46\r\n */\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Route,\r\n  Switch as RouterSwitch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport QueueAnim from \"rc-queue-anim\";\r\nimport { Layout, Menu, Breadcrumb, Avatar, Space, Badge, Switch } from \"antd\";\r\nimport {\r\n  BellOutlined,\r\n  MailOutlined,\r\n  SettingOutlined,\r\n  ExpandOutlined,\r\n  CheckOutlined,\r\n  CloseOutlined \r\n} from \"@ant-design/icons\";\r\nimport {\r\n  EditOutlined,\r\n  AudioOutlined,\r\n  UserOutlined,\r\n  OrderedListOutlined,\r\n  HomeOutlined,\r\n  RadarChartOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nimport styles from \"./App.module.scss\";\r\nimport screenfull from \"screenfull\"; // 导入全屏插件\r\nimport Routes from \"./router\";\r\n// 登录页面\r\nimport Login from \"./views/Login/Login\";\r\nimport AddArticle from \"./views/AddArticle/AddArticle\"; // 添加文章页面\r\nimport NotFound from \"./views/NotFound/NotFound\"; //404\r\nimport ResultPage from \"./views/ResultPage/ResultPage\"; // 结果页面\r\n\r\n// import Data from \"./views/Data/Data\";\r\n// import AddArticle from \"./views/AddArticle/AddArticle\";\r\n\r\nfunction App(props) {\r\n  const { Content, Footer, Sider } = Layout;\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const [activeItem, setActiveItem] = useState([props.location.pathname]); // 路由\r\n  const [breadcrumbItem, setBreadcrumbItem] = useState(\"可视化数据\"); // 面包屑导航\r\n  // console.log(props.history.listen(route => {\r\n  //   console.log(route)\r\n  // }),'props')\r\n  // const menuList = [\r\n  //   {\r\n  //     path: \"data\",\r\n  //     title: \"数据台\",\r\n  //     icon: <PieChartOutlined />,\r\n  //     children: [\r\n  //       {\r\n  //         path: \"data\",\r\n  //         title: \"实时数据\",\r\n  //         icon: <RadarChartOutlined />,\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     path: \"\",\r\n  //     title: \"文章管理\",\r\n  //     icon: <SettingOutlined />,\r\n  //     children: [\r\n  //       {\r\n  //         path: \"/admin/addArticle\",\r\n  //         title: \"添加文章\",\r\n  //         icon: <EditOutlined />,\r\n  //       },\r\n  //       {\r\n  //         path: \"articlesList\",\r\n  //         title: \"文章列表\",\r\n  //         icon: <OrderedListOutlined />,\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     path: \"chat\",\r\n  //     title: \"留言管理\",\r\n  //     icon: <AudioOutlined />,\r\n  //     children: [\r\n  //       {\r\n  //         path: \"/admin/chat\",\r\n  //         title: \"留言管理\",\r\n  //         icon: <AudioOutlined />,\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  // ];\r\n\r\n  const menuList = [\r\n    {\r\n      path: \"/admin/data\",\r\n      title: \"可视化数据\",\r\n      icon: <RadarChartOutlined />,\r\n    },\r\n    {\r\n      path: \"/admin/addArticle\",\r\n      title: \"添加文章\",\r\n      icon: <EditOutlined />,\r\n    },\r\n    {\r\n      path: \"/admin/articlesList\",\r\n      title: \"文章列表\",\r\n      icon: <OrderedListOutlined />,\r\n    },\r\n    {\r\n      path: \"/admin/chat\",\r\n      title: \"留言管理\",\r\n      icon: <AudioOutlined />,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const titleList = {\r\n      \"/admin/data\": \"数据台\",\r\n      \"/admin/articlesList\": \"文章列表\",\r\n      \"/admin/chat\": \"留言管理\",\r\n    };\r\n    // setActiveItem(['1']);\r\n    setBreadcrumbItem(titleList[props.location.pathname]);\r\n  }, [props.location.pathname]);\r\n\r\n  // 跳转页面\r\n  const setPage = (key) => {\r\n    console.log(key);\r\n    setActiveItem([menuList[key].path]);\r\n    props.history.push(menuList[key].path);\r\n    setBreadcrumbItem(menuList[key].title);\r\n  };\r\n\r\n  /**\r\n   * TODO 实现页面全屏化功能\r\n   */\r\n  const fullScreen = () => {\r\n    screenfull.toggle();\r\n  };\r\n\r\n  /**\r\n   * TODO 切换菜单栏\r\n   * \r\n   */\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <RouterSwitch>\r\n        <Redirect to=\"/user/login\" from=\"/\" exact></Redirect>\r\n        <Route path=\"/user/login\" exact component={Login}></Route>\r\n        <Route path=\"/admin/addArticle/:id?\" component={AddArticle}></Route>\r\n        <Route exact path=\"/admin/result\" component={ResultPage}></Route>\r\n        <Redirect to=\"/admin/data\" from=\"/admin\" exact></Redirect>\r\n        <Route path=\"/admin\">\r\n          <Layout className={styles.layoutWrap}>\r\n            <Sider\r\n              theme=\"dark\"\r\n              trigger={null}\r\n              collapsible\r\n              collapsed={collapsed}\r\n              onCollapse={(collapsed) => setCollapsed(collapsed)}\r\n              className={styles.siderWrap}\r\n            >\r\n              <QueueAnim delay={550} type=\"left\" leaveReverse>\r\n                <div className={styles.avatarWrap} key=\"0\">\r\n                  <Avatar size={50} src='/avatar.jpg' />\r\n                  <p className={styles.name}>小菜鸡</p>\r\n                  <p className={styles.date}>\r\n                    {new Date().toLocaleDateString()}\r\n                  </p>\r\n                </div>\r\n                <div className={styles.switch} key='1'>\r\n                  <Switch checkedChildren={<CheckOutlined />}\r\n      unCheckedChildren={<CloseOutlined />} defaultChecked onChange={(checked) => setCollapsed(checked)} />\r\n                </div>\r\n                <Menu\r\n                  className={styles.menuWrap}\r\n                  defaultSelectedKeys={activeItem}\r\n                  mode=\"inline\"\r\n                  onClick={({ key }) => setPage(key)}\r\n                  key=\"2\"\r\n                >\r\n                  {/* {menuList.map((item, index) => (\r\n\r\n                    <SubMenu\r\n                      key={index}\r\n                      title={\r\n                        <span>\r\n                          {item.icon}\r\n                          <span>{item.title}</span>\r\n                        </span>\r\n                      }\r\n                      onTitleClick={changeBreadcrumbItem}\r\n                    >\r\n                      {item.children.map((items) => (\r\n                        <Menu.Item key={items.path}>\r\n                          {items.icon}\r\n                          {items.title}\r\n                        </Menu.Item>\r\n                      ))}\r\n                    </SubMenu>\r\n                  ))} */}\r\n                  {menuList.map((item, index) => (\r\n                    <Menu.Item key={index} icon={item.icon}>\r\n                      {item.title}\r\n                    </Menu.Item>\r\n                  ))}\r\n\r\n                  {/* <Menu.Item key=\"data\">\r\n                    <PieChartOutlined />\r\n                    <span>实时数据</span>\r\n                  </Menu.Item>\r\n\r\n                  <SubMenu\r\n                    key=\"3\"\r\n                    title={\r\n                      <span>\r\n                        <SettingOutlined />\r\n                        <span>文章管理</span>\r\n                      </span>\r\n                    }\r\n                  >\r\n                    <Menu.Item key=\"addArticle\">\r\n                      <EditOutlined />\r\n                      添加文章\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key=\"articlesList\">\r\n                      <OrderedListOutlined />\r\n                      文章列表\r\n                    </Menu.Item>\r\n                  </SubMenu>\r\n\r\n                  <Menu.Item key=\"chat\">\r\n                    <AudioOutlined />\r\n                    <span>留言管理</span>\r\n                  </Menu.Item> */}\r\n                </Menu>\r\n\r\n                \r\n              </QueueAnim>\r\n            </Sider>\r\n            <Layout>\r\n              {/* <Header style={{ background: '#fff', padding: 0 }} /> */}\r\n              <Content className={styles.contentWrap}>\r\n                <div className={styles.headerWrap}>\r\n                  <Breadcrumb>\r\n                    <Breadcrumb.Item>\r\n                      <a href=\"/admin\">\r\n                        <HomeOutlined />\r\n                      </a>\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item>工作台</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>{breadcrumbItem}</Breadcrumb.Item>\r\n                  </Breadcrumb>\r\n                  <Space size=\"large\" className={styles.infoWrap}>\r\n                    <ExpandOutlined\r\n                      className={styles.screen}\r\n                      onClick={fullScreen}\r\n                    />\r\n\r\n                    <Badge\r\n                      size=\"small\"\r\n                      className={styles.infoItem}\r\n                      count={5}\r\n                      title=\"您有三条通知!\"\r\n                    >\r\n                      <BellOutlined />\r\n                    </Badge>\r\n\r\n                    <Badge\r\n                      color=\"#f39c12\"\r\n                      className={styles.infoItem}\r\n                      count={2}\r\n                    >\r\n                      <MailOutlined />\r\n                    </Badge>\r\n                    <Badge title=\"设置\" className={styles.settingItem}>\r\n                      <SettingOutlined />\r\n                    </Badge>\r\n                    <Badge dot color=\"#1abc9c\" title=\"个人信息\">\r\n                      <Avatar src='/avatar.jpg' />\r\n                    </Badge>\r\n                  </Space>\r\n                </div>\r\n                <div className={styles.content}>\r\n                  <Routes></Routes>\r\n                </div>\r\n              </Content>\r\n              <Footer className={styles.footer}>BLOG 后台管理 By 2021</Footer>\r\n            </Layout>\r\n          </Layout>\r\n        </Route>\r\n\r\n        {/* 暂时注释 */}\r\n        <Route path=\"/404\" component={NotFound} />\r\n        <Redirect from=\"*\" to=\"/404\" />\r\n      </RouterSwitch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\utils\\request.js",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\api\\api.js",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\NotFound\\NotFound.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\ResultPage\\ResultPage.jsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":7,"column":9,"nodeType":"71","messageId":"72","endLine":7,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":13,"column":1,"nodeType":"75","endLine":49,"endColumn":2},{"ruleId":"69","severity":1,"message":"76","line":14,"column":11,"nodeType":"71","messageId":"72","endLine":14,"endColumn":19},{"ruleId":"69","severity":1,"message":"77","line":15,"column":11,"nodeType":"71","messageId":"72","endLine":15,"endColumn":19},{"ruleId":"69","severity":1,"message":"78","line":28,"column":3,"nodeType":"71","messageId":"72","endLine":28,"endColumn":15},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'userName' is assigned a value but never used.","'password' is assigned a value but never used.","'UserOutlined' is defined but never used.","no-global-assign","no-unsafe-negation"]