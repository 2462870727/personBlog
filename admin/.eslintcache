[{"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\router.js":"2","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Login\\login.jsx":"3","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Login\\Login.jsx":"4","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\AddArticle\\AddArticle.jsx":"5","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Data\\Data.jsx":"6","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Chat\\Chat.jsx":"7","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\ArticlesList\\ArticlesList.jsx":"8","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\App.jsx":"9","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\utils\\request.js":"10","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\api\\api.js":"11","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\NotFound\\NotFound.jsx":"12","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\ResultPage\\ResultPage.jsx":"13"},{"size":476,"mtime":1608024086798,"results":"14","hashOfConfig":"15"},{"size":978,"mtime":1609812577652,"results":"16","hashOfConfig":"15"},{"size":1678,"mtime":1606724708599,"results":"17","hashOfConfig":"18"},{"size":2463,"mtime":1608775653272,"results":"19","hashOfConfig":"15"},{"size":12428,"mtime":1609208211730,"results":"20","hashOfConfig":"15"},{"size":288,"mtime":1609812577653,"results":"21","hashOfConfig":"15"},{"size":123,"mtime":1607998221108,"results":"22","hashOfConfig":"15"},{"size":2423,"mtime":1609208211731,"results":"23","hashOfConfig":"15"},{"size":7826,"mtime":1609844077011,"results":"24","hashOfConfig":"15"},{"size":3519,"mtime":1609228396372,"results":"25","hashOfConfig":"15"},{"size":960,"mtime":1609225217239,"results":"26","hashOfConfig":"15"},{"size":629,"mtime":1609208211734,"results":"27","hashOfConfig":"15"},{"size":524,"mtime":1609208211735,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1a8ql3p",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"s5x0hj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\index.js",[],["58","59"],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\router.js",["60"],"/*\r\n * @Author: jk\r\n * @Date: 2020-12-14 11:15:30\r\n * @Last Modified by: jk\r\n * @Last Modified time: 2021-01-04 16:37:25\r\n */\r\nimport {lazy} from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Data from \"./views/Data/Data\"; // 数据添加页面\r\n// const Data = lazy(()=> import(\"./views/Data/Data\"));\r\nimport ArticlesList from \"./views/ArticlesList/ArticlesList\"; // 文章列表页面\r\nimport Chat from \"./views/Chat/Chat\"; // 理由列表页面\r\n// import ResultPage from \"./views/ResultPage/ResultPage\";\r\nconst Routes = (props) => {\r\n  return (\r\n    <Switch>\r\n      {/* <Route exact path=\"/admin/addArticle\" component={AddArticle}></Route> */}\r\n\r\n      <Route exact path=\"/admin/data\" component={Data}></Route>\r\n      <Route exact path=\"/admin/chat\" component={Chat} />\r\n      <Route exact path=\"/admin/articlesList\" component={ArticlesList} />\r\n      <Redirect from=\"*\" to=\"/404\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Routes;\r\n","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Login\\login.jsx",["61","62","63"],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Login\\Login.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\AddArticle\\AddArticle.jsx",["64"],"import { useState,useEffect} from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  Drawer,\r\n  Form,\r\n  DatePicker,\r\n  Switch,\r\n  Tag,\r\n  Upload,\r\n  message,\r\n  Select,\r\n  notification,\r\n} from \"antd\";\r\nimport {\r\n  PlusOutlined,\r\n  SendOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  UploadOutlined,\r\n  DeleteOutlined\r\n} from \"@ant-design/icons\";\r\nimport { TweenOneGroup } from \"rc-tween-one\";\r\nimport randomcolor from \"randomcolores\";\r\nimport styles from \"./AddArticle.module.scss\";\r\nimport marked  from \"marked\"; // 导入marked\r\nimport hljs from \"highlight.js\"; // 导入高亮插件\r\nimport \"highlight.js/styles/monokai-sublime.css\"; //导入highlight的css\r\nimport \"moment/locale/zh-cn\"; // 时间选择时间格式\r\nimport locale from \"antd/es/date-picker/locale/zh_CN\";\r\nimport { articleTypeApi,postArticleApi,saveArticleApi } from \"../../api/api\";\r\nconst AddArticle = (props) => {\r\n  const { Option } = Select;\r\n  // const history = useHistory();\r\n  const { TextArea } = Input;\r\n\r\n  /** mark配置*/\r\n  marked.setOptions({\r\n    renderer: new marked.Renderer(),\r\n    pedantic: false,\r\n    gfm: true,\r\n    tables: true,\r\n    breaks: false,\r\n    sanitize: false,\r\n    smartLists: true,\r\n    smartypants: false,\r\n    xhtml: false,\r\n    highlight: function (code) {\r\n      return hljs.highlightAuto(code).value;\r\n    },\r\n  });\r\n  const [visible, setVisible] = useState(false);      //抽屉显示隐藏\r\n  const [desHTMLContent, setDesHTMLContent] = useState(\r\n    \"这里是简介markDown预览\"\r\n  ); // 简介HTML内容\r\n  const [desContent,setDesContent] = useState('')\r\n  const [articleContent,setArticleContent] = useState('')       //文章内容\r\n  const [HTMLContent, setHTMLContent] = useState(\"这里预览markDown\");   // markDown转换后文本\r\n  \r\n\r\n  const [inputVisible, setInputVisible] = useState(false);      // 便签文本框是否显示\r\n  const [inputValue, setInputValue] = useState(\"\");         //标签输入框内容\r\n  const [tags, setTags] = useState([]);          // 标签列表\r\n  const [articleType,setArticleType] = useState()  // 选中文章类别\r\n  const [typeList,setTypeList] = useState([])       // 文章类别列表\r\n  const [date,setDate] = useState('')     // 发布时间\r\n  const [title,setTitle] = useState('')     // 文字标题\r\n  const [articleOrder,setArticleOrder] = useState(true)\r\n\r\n  /**删除标签 */\r\n    const cutTags =(idx)=>{\r\n      tags.splice(idx,1)\r\n      setTags([...tags])\r\n    }\r\n\r\n    /**标签列表 */\r\n  const tagItem = tags.map((item,index) => {\r\n    const tagElem = (\r\n      <Tag\r\n        closable\r\n        key={item.color}\r\n        color={item.color}\r\n        className={styles.tagList}\r\n        onClose={e => cutTags(index)}\r\n      >\r\n        {item.title}\r\n      </Tag>\r\n    );\r\n    return <span key={item.title}>{tagElem}</span>;\r\n  });\r\n\r\n  // 点击Tag展示输入框\r\n  const showInput = () => {\r\n    setInputVisible(true);\r\n  };\r\n\r\n  // Tag输入框失焦或者回车事件\r\n  const handleInputConfirm = () => {\r\n    // for (let item of tags) {\r\n    if (inputValue) {\r\n      // console.log(item,inputValue);\r\n      const hexcolor = randomcolor.HEXColor;\r\n      tags.push({\r\n        title: inputValue,\r\n        color: hexcolor(),\r\n      });\r\n      setInputVisible(false);\r\n      setTags(tags);\r\n      setInputValue(\"\");\r\n      console.log(tags);\r\n      // return;\r\n    }\r\n    // }\r\n    // if (inputValue && tags.indexOf(inputValue) === -1) {\r\n    // const hexcolor = randomcolor.HEXColor;\r\n    // tags.push( {\r\n    //   title: inputValue,\r\n    //   color: hexcolor(),\r\n    // });\r\n    // setInputVisible(false);\r\n    // setTags(tags);\r\n    // setInputValue(\"\");\r\n    // console.log(tags);\r\n    // }\r\n  };\r\n\r\n  // 导入markDown\r\n  // const props = {\r\n  //   name: \"file\",\r\n  //   action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n  //   headers: {\r\n  //     authorization: \"authorization-text\",\r\n  //   },\r\n  //   onChange(info) {\r\n  //     if (info.file.status !== \"uploading\") {\r\n  //       console.log(info.file, info.fileList);\r\n  //     }\r\n  //     if (info.file.status === \"done\") {\r\n  //       message.success(`${info.file.name} file uploaded successfully`);\r\n  //     } else if (info.file.status === \"error\") {\r\n  //       message.error(`${info.file.name} file upload failed.`);\r\n  //     }\r\n  //   },\r\n  //   beforeUpload: file => {\r\n  //     this.setState(state => ({\r\n  //       fileList: [...state.fileList, file],\r\n  //     }));\r\n  //     return false;\r\n  //   },\r\n  // };\r\n\r\n  /**\r\n   * 获取文本内容\r\n   * @param {Object} e 当前Input dom\r\n   */\r\n  const changeMdContent = (e) => {\r\n    // console.log(e.target.value);\r\n    setArticleContent(e.target.value)\r\n    let html = marked(e.target.value);\r\n    setHTMLContent(html);\r\n  };\r\n\r\n  /**\r\n   * 获取简介文本内容\r\n   * @param {Object} e 当前Input dom\r\n   */\r\n  const changeDescContent = (e) => {\r\n    // console.log(e.target.value);\r\n    setDesContent(e.target.value)\r\n    let html = marked(e.target.value);\r\n    setDesHTMLContent(html);\r\n  };\r\n\r\n  /**\r\n   * 发布文章\r\n   * @param(Array) tags 文章标签\r\n   * @param(String) desContent 文章简介\r\n   * @param(String) articleContent 内容简介\r\n   * @param(String) title 文章标题\r\n   * @param(String) date  文章发布日期\r\n   * @param(Number) articleType 文章类别 \r\n   * @param(Boolean) articleOrder 文章置顶排序\r\n   */\r\n  const postArticle = ()=> {\r\n    console.log(tags)  // 文字标签\r\n    console.log(desContent)  // 文字标签\r\n    console.log(articleContent)  // 文字标签\r\n    console.log(title)  \r\n    console.log(date)\r\n    console.log(articleType)\r\n    console.log(articleOrder)\r\n    if(!articleContent){\r\n      message.info('请填写文章内容~~')\r\n      return\r\n    }else if(!tags.length) {\r\n      message.info('请输入文章标签~~')\r\n      return\r\n    }else if(!desContent) {\r\n      message.info('请输入文章简介~~')\r\n      return\r\n    }else if(!title) {\r\n      message.info('请输入文章标题~~')\r\n      return\r\n    }else if(!articleType){\r\n      message.info('请输入文章类别~~')\r\n      return\r\n    }\r\n\r\n      /**请求接口 */\r\n    postArticleApi({\r\n      // articleId: \"11\",\r\n      articleTitle: title,\r\n      articleContent: articleContent,\r\n      articleDesc: desContent,\r\n      articleOrder,\r\n      articleType,\r\n      articleDate: date,\r\n      articleTags: JSON.stringify(tags)\r\n\r\n    }).then(res => {\r\n      // console.log(res,'res')\r\n      notification.success({\r\n        message: res.message\r\n      })\r\n      // alert('aa')\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 文章暂存\r\n   * @param {String} title 文章标题\r\n   * @param {String} articleContent 文章内容\r\n   */\r\n  const addDrafts = ()=> {\r\n      /**内容校验 */\r\n      if(!title){\r\n        message.info('请输入文章标题~~')\r\n        return\r\n      }else if (!articleContent){\r\n        message.info('请填写文章内容~~')\r\n        return\r\n      }\r\n      /**请求接口 */\r\n      saveArticleApi({\r\n        articleTitle:title,\r\n        articleContent: articleContent\r\n      }).then(res => {\r\n        console.log(res.message)\r\n        notification.success({\r\n          message: res.message\r\n        })\r\n      })\r\n      \r\n  }\r\n\r\n  // 获取文章内容\r\n  useEffect(() => {\r\n   console.log(props.match.params)\r\n   \r\n  }, [])\r\n\r\n  // 获取文章类型\r\n  useEffect(()=>{\r\n    articleTypeApi().then(res => {\r\n      setTypeList(res)\r\n    })\r\n  },[])\r\n\r\n  //  开启Drawer\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  //  关闭Drawer\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  // 返回上一页\r\n  const backPage = () => {\r\n    props.history.goBack();\r\n  };\r\n  return (\r\n    <main>\r\n      <div className={styles.titleWrap}>\r\n        <Input className={styles.titleInput} placeholder=\"输入文章标题......\" onChange={(e)=> setTitle(e.target.value)}/>\r\n        <Button type=\"link\" onClick={backPage}>\r\n          返回\r\n        </Button>\r\n        <Upload >\r\n          <Button type=\"text\" icon={<UploadOutlined />}>\r\n            导入MarkDown\r\n          </Button>\r\n        </Upload>\r\n       \r\n        <Button type=\"primary\" shape=\"round\"  icon={<DeleteOutlined />}   onClick={addDrafts}>保存</Button>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"large\"\r\n          icon={<SendOutlined />}\r\n          className={styles.send}\r\n          ghost\r\n          onClick={showDrawer}\r\n        >\r\n          发布\r\n        </Button>\r\n      </div>\r\n      <Row gutter={5} className={styles.contextWrap}>\r\n        <Col span={12}>\r\n          <TextArea\r\n          value={articleContent}\r\n            className={styles.codeWrap}\r\n            placeholder=\"BLOG内容......\"\r\n            onChange={changeMdContent}\r\n          ></TextArea>\r\n        </Col>\r\n        <Col span={12} className={styles.viewWrap}>\r\n          <div dangerouslySetInnerHTML={{ __html: HTMLContent }}>\r\n            {/* {HTMLContent} */}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* 发布抽屉 */}\r\n      <Drawer\r\n        title=\"发布\"\r\n        placement=\"right\"\r\n        closable={false}\r\n        onClose={onClose}\r\n        visible={visible}\r\n        width=\"400\"\r\n        className={styles.drawerWrap}\r\n        getContainer={false}\r\n      >\r\n        <Form size=\"large\" layout=\"vertical\">\r\n          <Form.Item\r\n            label=\"BLOG简介\"\r\n            name=\"descContent\"\r\n            rules={[{ required: true, message: \"输入BLOG 简介!\" }]}\r\n          >\r\n            <TextArea\r\n              showCount\r\n              maxLength={100}\r\n              placeholder=\"BLOG简介......\"\r\n              autoSize={{ minRows: 5, maxRows: 8 }}\r\n              onChange={changeDescContent}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item label=\"简介预览\" >\r\n            <div dangerouslySetInnerHTML={{ __html: desHTMLContent }}></div>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"发布时间\"\r\n          >\r\n            <DatePicker  locale={locale} onChange={( ...date) => setDate(date[1])}/>\r\n          </Form.Item>\r\n          <Form.Item label='文章类别'>\r\n            <Select defaultValue={articleType}   placeholder='选择文章类别' onChange={(value)=>{setArticleType(value)}} allowClear>\r\n              {\r\n                typeList.map(item => (\r\n                  <Option key={item.typeId} value={item.typeId}>{item.title}</Option> \r\n                ))\r\n              }\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"是否置顶显示\">\r\n            <Switch\r\n              checkedChildren={<CheckOutlined />}\r\n              unCheckedChildren={<CloseOutlined />}\r\n              checked={articleOrder}\r\n              onChange={checked => setArticleOrder(checked)}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"文章标签\">\r\n            <TweenOneGroup\r\n              enter={{\r\n                scale: 0.8,\r\n                opacity: 0,\r\n                type: \"from\",\r\n                duration: 400,\r\n                onComplete: (e) => {\r\n                  e.target.style = \"\";\r\n                },\r\n              }}\r\n              leave={{ opacity: 0, width: 0, scale: 0, duration: 400 }}\r\n              appear={false}\r\n            >\r\n              {tagItem}\r\n            </TweenOneGroup>\r\n            {/* {tags.map((item) => (\r\n              \r\n                 <Tag closable key={item.color} color={item.color}>\r\n                {item.title}\r\n              </Tag> \r\n            \r\n            ))} */}\r\n            {inputVisible && (\r\n              <Input\r\n                // ref={this.saveInputRef}\r\n                type=\"text\"\r\n                size=\"small\"\r\n                style={{ width: 78 }}\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n                onBlur={handleInputConfirm}\r\n                onPressEnter={handleInputConfirm}\r\n                className={styles.addTag}\r\n              />\r\n            )}\r\n            {!inputVisible && (\r\n              <Tag onClick={showInput} className={styles.addTag}>\r\n                <PlusOutlined /> New Tag\r\n              </Tag>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" block onClick={postArticle}>\r\n              发布文章\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Drawer>\r\n    </main>\r\n  );\r\n};\r\nexport default AddArticle;\r\n","C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Data\\Data.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\Chat\\Chat.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\ArticlesList\\ArticlesList.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\App.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\utils\\request.js",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\api\\api.js",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\NotFound\\NotFound.jsx",[],"C:\\Users\\Administrator\\Desktop\\personal-blog\\admin\\src\\views\\ResultPage\\ResultPage.jsx",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":7,"column":9,"nodeType":"71","messageId":"72","endLine":7,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":13,"column":1,"nodeType":"75","endLine":49,"endColumn":2},{"ruleId":"69","severity":1,"message":"76","line":14,"column":11,"nodeType":"71","messageId":"72","endLine":14,"endColumn":19},{"ruleId":"69","severity":1,"message":"77","line":15,"column":11,"nodeType":"71","messageId":"72","endLine":15,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":262,"column":6,"nodeType":"80","endLine":262,"endColumn":8,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'userName' is assigned a value but never used.","'password' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [props.match.params]",{"range":"87","text":"88"},[6773,6775],"[props.match.params]"]